import React, { useState } from "react";

const VoiceAssistant = () => {
  const [listening, setListening] = useState(false);
  const [transcript, setTranscript] = useState("");
  const [bgColor, setBgColor] = useState("#f5f5f5");

  // –ó”©–≤—à”©”©—Ä”©–≥–¥—Å”©–Ω ”©–Ω–≥”©–Ω–∏–π –Ω—ç—Ä“Ø“Ø–¥
  const colors = [
    "red",
    "blue",
    "green",
    "yellow",
    "orange",
    "pink",
    "purple",
    "lime",
    "cyan",
    "magenta",
    "black",
  ];

  let recognition;

  // –î—É—É–≥–∞–∞—Ä ”©–Ω–≥”© —Å–æ–ª–∏—Ö —Ñ—É–Ω–∫—Ü
  const startListening = () => {
    const SpeechRecognition =
      window.SpeechRecognition || window.webkitSpeechRecognition;
    recognition = new SpeechRecognition();
    recognition.lang = "en-US"; // —ç—Å–≤—ç–ª "mn-MN"
    recognition.continuous = false;

    recognition.onresult = (event) => {
      const text = event.results[0][0].transcript.toLowerCase();
      setTranscript(text);

      // –•—ç—Ä–≤—ç—ç —Ç–µ–∫—Å—Ç –¥–æ—Ç–æ—Ä –∑”©–≤—à”©”©—Ä”©–≥–¥—Å”©–Ω ”©–Ω–≥”©–Ω–∏–π –Ω—ç—Ä –±–∞–π–≤–∞–ª background ”©–Ω–≥–∏–π–≥ ”©”©—Ä—á–ª”©—Ö
      const foundColor = colors.find((c) => text.includes(c));
      if (foundColor) {
        setBgColor(foundColor);
        console.log(`”®–Ω–≥”© —Å–æ–ª–∏–≥–¥–ª–æ–æ: ${foundColor}`);
      } else {
        console.log("”®–Ω–≥”©–Ω–∏–π –Ω—ç—Ä –æ–ª–¥—Å–æ–Ω–≥“Ø–π");
      }
    };

    recognition.onend = () => setListening(false);

    if (!listening) {
      setTranscript("");
      setListening(true);
      recognition.start();
      console.log("‚òùÔ∏è –î—É—É–Ω—ã –∫–æ–º–∞–Ω–¥—ã–≥ —Å–æ–Ω—Å–æ–∂ —ç—Ö—ç–ª–ª—ç—ç...");
    } else {
      recognition.stop();
      setListening(false);
      console.log("‚úã –°–æ–Ω—Å–æ—Ö—ã–≥ –∑–æ–≥—Å–æ–æ–ª–æ–æ");
    }
  };

  return (
    <div
      style={{
        textAlign: "center",
        padding: "40px",
        transition: "background 0.5s ease",
        background: bgColor,
        minHeight: "80vh",
      }}
    >
      {/* –î—É—É —Å–æ–Ω—Å–æ—Ö —Ç–æ–≤—á */}
      <button
        onClick={startListening}
        style={{
          padding: "10px 20px",
          borderRadius: "8px",
          fontSize: "16px",
          cursor: "pointer",
          background: listening ? "#ff7675" : "#6c63ff",
          color: "white",
          border: "none",
          transition: "background 0.3s ease",
        }}
      >
        {listening ? "üé§ –°–æ–Ω—Å–æ–∂ –±–∞–π–Ω–∞..." : "üéôÔ∏è –î—É—É–Ω—ã –∫–æ–º–∞–Ω–¥—ã–≥ —ç—Ö–ª“Ø“Ø–ª—ç—Ö"}
      </button>

      {/* –°–æ–Ω—Å–æ–≥–¥—Å–æ–Ω —Ç–µ–∫—Å—Ç–∏–π–≥ —Ö–∞—Ä—É—É–ª–∞—Ö */}
      <p style={{ marginTop: "20px", fontSize: "18px" }}>
        {transcript && `–°–æ–Ω—Å–æ–≥–¥—Å–æ–Ω —Ç–µ–∫—Å—Ç: "${transcript}"`}
      </p>

      {/* –¢–∞–π–ª–±–∞—Ä */}
      <p style={{ marginTop: "10px", fontSize: "16px", color: "#333" }}>
        –•—ç–ª—Å—ç–Ω ”©–Ω–≥”©–Ω–∏–π –Ω—ç—Ä—ç—ç—Ä background ”©–Ω–≥”© –∞–≤—Ç–æ–º–∞—Ç–∞–∞—Ä —Å–æ–ª–∏–≥–¥–æ–Ω–æ. –ñ–∏—à—ç—ç:
        "red", "blue", "green"...
      </p>
    </div>
  );
};

export default VoiceAssistant;
